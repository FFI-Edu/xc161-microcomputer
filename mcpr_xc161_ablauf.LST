C166 COMPILER V7.53.0.0, MCPR_XC161_ABLAUF                                                 11/28/2013 17:25:08 PAGE 1   


C166 COMPILER V7.53.0.0, COMPILATION OF MODULE MCPR_XC161_ABLAUF
OBJECT MODULE PLACED IN mcpr_xc161_ablauf.OBJ
COMPILER INVOKED BY: C:\Programme\Mikrocom\Keil\C166\BIN\C166.EXE mcpr_xc161_ablauf.c MODV2 COMPACT BROWSE MODV2 DEBUG

 stmt lvl     source

    1         #include <XC161.h>
    2         #include "Platform_types.h"
    3         #include "mcpr_xc161_lcd.h"
    4         #include "mcpr_xc161_timer.h"
    5         
    6         void led_output (uint8 led);
    7         uint16 read_keys();
    8          
    9                           /****************/
   10                           /*     main     */
   11                           /****************/     
   12         void main (void) {
   13  1               // ====================
   14  1         // BACKLIGHT CONTROLLER
   15  1         uint16 key_state;
   16  1         uint16 temperature        = 0;
   17  1         uint16 no_key             = 0;
   18  1         uint8 last_key_state_up   = 0;
   19  1         uint8 last_key_state_down = 0;
   20  1         //uint8 last_lcd_set        = 0; //only last 2 bits important
   21  1         // ====================
   22  1         // LOOPTIMER
   23  1         uint32 timer_start        = 0;
   24  1              
   25  1         // ====================
   26  1         // INIT
   27  1         PSW_IEN        = 1; // Interrupt enable      
   28  1         lcd_init();
   29  1         timer_init();
   30  1              
   31  1               // ====================
   32  1               // MAINLOOP
   33  1         while(1) {
   34  2                timer_main  = 0;
   35  2            timer_start = timer_main;
   36  2                        
   37  2                // GET KEYS
   38  2            key_state = read_keys();
   39  2            led_output(((uint8) key_state)  |  ((uint8) (key_state>>8)));
   40  2            // LCD BL
   41  2            lcd_backlight_controller(key_state, &last_key_state_up, &last_key_state_down/*, &last_lcd_set*/);
   42  2            // LCD TEXT
   43  2            lcd_writestatus(get_cycle(),get_temp());
   44  2                              
   45  2                              while((timer_start + 50) > timer_main);
   46  2         }
   47  1      }
   48          
   49         void led_output (uint8 led) {
   50  1         IC2 = led;
   51  1      }
   52          
   53         uint16 read_keys() {
   54  1         int i        =0, j=0;
   55  1         uint16 state = 0;
C166 COMPILER V7.53.0.0, MCPR_XC161_ABLAUF                                                 11/28/2013 17:25:08 PAGE 2   

   56  1         DP7_P6  = 1;
   57  1         P7_P6   = 0;
   58  1         for(i=0; i<4; i++) {
   59  2            IC3 = 1 << i;
   60  2            for(j=0; j<100; j++);  //auf Transistoren warten
   61  2            state = state<<4;
   62  2            state |= ~(P5) & 0xF;
   63  2         }  
   64  1         return state;
   65  1      }


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         190     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
